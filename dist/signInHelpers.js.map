{"mappings":"C,A,kC;A,uC;A,E;A,2D;A,E;A,4D;A,wD;A,S,C,C,C,C,C,C,C,C,C,E,2B,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,0D;A,+D;A,8B;A,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,E,gE;A,6D;A,+D;A,gC;A,G,E,O,E,E,C,E,+C;A,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,qD;A,yE;A,I,E,E,E,Y;A,U,O,S,A,a,O,O,O,O,C,E,A,Y,O,Q,O,G,C,O,W,O,C,G,G,C,I,C,E,C,C,C,C,E,C,M,C,S,C,C,C,C,C,ECgBA,eAAe,IACb,GAAI,AAhBN,WAOE,IAAK,GAAI,CAAC,EAAS,EAAM,GAAI,OAAO,OAAA,CANnB,CACf,SAAU,eACV,QAAS,aACT,OAAQ,iBACR,UAAW,cACb,GAEE,GAAI,EAAM,IAAA,CAAK,UAAU,SAAA,EACvB,OAAO,EAGX,MAAO,CAAA,CACT,IAGwB,CACpB,IAAM,EAAU,SAAS,cAAA,CAAe,oBACnC,EAAQ,SAAA,CAAU,QAAA,CAAS,iBAC9B,WAAW,KACT,EAAQ,SAAA,CAAU,GAAA,CAAI,gBACtB,UAAU,KAAA,CAAM,iBAAkB,CAAE,UAAW,yBAA0B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","sources":["<anon>","signInHelpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"ioxVe\":[function(require,module,exports) {\nfunction isInAppBrowser() {\n    const browsers = {\n        facebook: /\\bFB[\\w_]+\\//,\n        twitter: /\\bTwitter/i,\n        tiktok: /\\bBytedance\\//i,\n        instagram: /\\bInstagram/i\n    };\n    for (let [browser, regex] of Object.entries(browsers)){\n        if (regex.test(navigator.userAgent)) return browser;\n    }\n    return false;\n}\nasync function signInWithGoogle() {\n    if (isInAppBrowser()) {\n        const element = document.getElementById(\"inAppBrowserInfo\");\n        if (!element.classList.contains(\"tooltip-show\")) setTimeout(()=>{\n            element.classList.add(\"tooltip-show\");\n            analytics.track(\"Element Viewed\", {\n                elementID: \"googleInAppBrowserPopup\"\n            });\n        }, 0);\n        return;\n    }\n    googleButtonText.style.display = \"none\";\n    googleButtonLoadingIcon.style.display = \"block\";\n    // [START auth_google_provider_create]\n    var provider = new firebase.auth.GoogleAuthProvider();\n    // [END auth_google_provider_create]\n    //NEW POPUP SIGNIN\n    try {\n        await firebase.auth().signInWithPopup(provider);\n        await authUser.whenSet(signedInNextStep);\n    } catch (error) {\n        errorHandler.report(error);\n        const errorText = `[webflow] Error signing in with Google: ${error.code}, ${error.message}, ${error.email}, ${error}`;\n        console.log(errorText);\n    }\n}\ndocument.addEventListener(\"click\", (event)=>{\n    const tooltip = document.getElementById(\"inAppBrowserInfo\");\n    if (!tooltip.contains(event.target)) tooltip.classList.remove(\"tooltip-show\");\n});\nfunction displayPreferredSignInMethod(signInMethod) {\n    if (!signInMethod.length) return;\n    const buttonId = signInMethod === \"google.com\" ? \"googleSignInButton\" : signInMethod === \"phone\" ? \"smsCodeButton\" : \"emailAndPasswordButton\";\n    const innerDiv = document.getElementById(buttonId);\n    const outerDiv = innerDiv.parentElement;\n    preferredSignInMethodDiv.appendChild(outerDiv.removeChild(innerDiv));\n    preferredSignInMethodDiv.style.display = \"block\";\n    showOtherSignInMethodsButton.style.display = \"flex\";\n    otherSignInMethodsDiv.style.display = \"none\";\n}\nconst params = new URL(window.location).searchParams;\n//Get preferred sign in method\nif (params.has(\"s\") && params.get(\"s\").length >= 3) getSignInInfo(params.get(\"s\")).then((res)=>{\n    if (!(res.email || res.phone || res.method)) return;\n    emailAddress.value = res.email;\n    document.getElementById(\"signinPhoneNumber\").value = res.phone?.replace(\"+46\", \"\");\n    if (res.method === \"google.com\") {\n        displayIntroDivText(\"logInIntroText\", res.email);\n        displayPreferredSignInMethod(\"google.com\");\n    } else if (res.method === \"password\") {\n        loginAlternativesDiv.style.display = \"none\";\n        displayIntroDivText(\"logInIntroText\");\n        checkEmail();\n    } else if (res.method === \"phone\") {\n        displayIntroDivText(\"logInIntroText\");\n        phoneLoginDiv.style.display = \"block\";\n        mobileNumberDiv.style.display = \"block\";\n        orLoginOtherWayDiv.style.display = \"block\";\n        loginAlternativesDiv.style.display = \"none\";\n    }\n});\nelse displayPreferredSignInMethod(getPreferredLogInMethodCookie());\nif (userIsSellingNewItem()) {\n    const item = JSON.parse(sessionStorage.getItem(\"itemToBeCreatedAfterSignIn\")).item;\n    itemImage.src = item?.images?.enhancedFrontImageSmall || item?.images?.enhancedFrontImage || \"\";\n    notificationText.innerHTML = `För att fullfölja försäljningen av ditt ${item.brand}-plagg behöver du logga in eller skapa konto`;\n    itemToBeCreatedDiv.style.display = \"block\";\n}\n// Disable Webflow form submit\n$(\"#Password-form\").submit(function() {\n    return false;\n});\n$(\"#Choose-password-form\").submit(function() {\n    return false;\n});\nvar form = document.getElementById(\"Phone-number-form\");\nform.addEventListener(\"submit\", phoneSignIn);\nfunction phoneSignIn(event) {\n    event.preventDefault();\n    submitLoadIcon.style.display = \"block\";\n    sendCodeButton.style.display = \"none\";\n    const formPhoneNumber = signinPhoneNumber.value.startsWith(\"0\") ? signinPhoneNumber.value.slice(1) : signinPhoneNumber.value;\n    const phoneNumber1 = formPhoneNumber.startsWith(\"+46\") ? formPhoneNumber : `+46${formPhoneNumber}`;\n    console.log(\"signInWithPhoneNumber\", phoneNumber1);\n    callBackendApi(\"/api/users/authStart\", {\n        data: {\n            phoneNumber: phoneNumber1\n        },\n        requiresAuth: false\n    }).then(()=>{\n        window.phoneNumber = phoneNumber1;\n        mobileNumberDiv.style.display = \"none\";\n        verifyDiv.style.display = \"block\";\n    }).catch((error)=>{\n        submitLoadIcon.style.display = \"none\";\n        errorMessageDiv.innerText = error.message;\n        console.log(\"Error message: \" + error.message);\n        errorHandler.report(error);\n    });\n}\nsigninButton.addEventListener(\"click\", verifyCode);\nsmsCodeButton.addEventListener(\"click\", function() {\n    phoneLoginDiv.style.display = \"block\";\n    mobileNumberDiv.style.display = \"block\";\n    orLoginOtherWayDiv.style.display = \"block\";\n    loginAlternativesDiv.style.display = \"none\";\n});\nfunction verifyCode() {\n    const code = verificationCode.value;\n    console.log(\"Verify screen. My code: \", code);\n    console.log(\"phone number to verify\", phoneNumber);\n    let isNewUser = false;\n    callBackendApi(\"/api/users/phoneNumberExists\", {\n        data: {\n            phoneNumber\n        },\n        requiresAuth: false\n    }).then((result)=>{\n        console.log(\"phoneNumberExists result\", phoneNumber, JSON.stringify(result));\n        const type = result.data.exists ? \"signIn\" : \"signUp\";\n        isNewUser = type === \"signUp\";\n        return callBackendApi(\"/api/users/authVerify\", {\n            data: {\n                phoneNumber,\n                code,\n                type\n            },\n            requiresAuth: false\n        });\n    }).then((result)=>{\n        const customToken = result.data.customToken;\n        return firebase.auth().signInWithCustomToken(customToken);\n    }).then((user)=>{\n        if (typeof Storage !== \"undefined\") {\n            sessionStorage.setItem(\"userId\", user.uid);\n            sessionStorage.setItem(\"phone\", user.phoneNumber);\n        } else console.log(\"Sorry, your browser does not support Web Storage...\");\n        console.log(\"isNewUser\", isNewUser);\n        if (isNewUser) {\n            emailForTipsDiv.style.display = \"block\";\n            verifyDiv.style.display = \"none\";\n            phoneLoginDiv.style.display = \"none\";\n        } else authUser.whenSet(signedInNextStep);\n    }).catch((error)=>{\n        console.log(\"My error: \" + error.message);\n        errorHandler.report(error);\n    });\n}\nfunction addEmailAndNavigate() {\n    try {\n        tipsEmailButton.style.display = \"none\";\n        loadingSpinnerDiv.style.display = \"flex\";\n        if (typeof Storage !== \"undefined\") sessionStorage.setItem(\"email\", emailTipsInput.value);\n        else console.log(\"Sorry, your browser does not support Web Storage...\");\n        authUser.whenSet(signedInNextStep);\n    } catch (e) {\n        console.log(\"failed to add email\", e);\n        loadingSpinnerDiv.style.display = \"none\";\n        tipsEmailButton.style.display = \"block\";\n        errorHandler.report(e);\n    }\n}\n// EMAIL AND PASSWORD SIGN UP\nfunction signInWithEmailPassword() {\n    const email = emailAddress.value;\n    const password = emailPassword.value;\n    signInWithEmailButton.style.display = \"none\";\n    passwordLoadIcon.style.display = \"block\";\n    // [START auth_signin_password]\n    firebase.auth().signInWithEmailAndPassword(email, password).then((userCredential)=>{\n        // Signed in\n        const user = userCredential.user;\n        window.userId = user.uid;\n        console.log(\"Logged in user: \", user.uid);\n        authUser.whenSet(()=>{\n            if (!authUser.current.emailVerified && getCookie(\"viewedVerifyEmailDiv\") !== \"true\") signedInNextStep(\"./user-management?mode=sendEmailVerification\");\n            else signedInNextStep();\n        });\n    }).catch((error)=>{\n        errorHandler.report(error);\n        console.log(\"Error message:\", error.code, error.message);\n        if (error.code === \"auth/wrong-password\") {\n            passwordFeedback.innerText = \"Fel l\\xf6senord\";\n            passwordFeedback.style.display = \"block\";\n            signInWithEmailButton.style.display = \"block\";\n            passwordLoadIcon.style.display = \"none\";\n        }\n    });\n// [END auth_signin_password]\n}\nfunction signUpWithEmailPassword() {\n    const email = emailAddress.value;\n    const password = newPassword.value;\n    signUpWithEmailButton.style.display = \"none\";\n    passwordGoBack.style.display = \"none\";\n    newPasswordLoadIcon.style.display = \"block\";\n    // [START auth_signup_password]\n    firebase.auth().createUserWithEmailAndPassword(email, password).then((userCredential)=>{\n        // Signed in\n        const user = userCredential.user;\n        window.userId = user.uid;\n        console.log(\"Logged in user: \", user);\n        firebase.auth().currentUser.sendEmailVerification().then(()=>{\n            authUser.whenSet(()=>signedInNextStep(\"./user-management?mode=sendEmailVerification\"));\n        });\n    }).catch((error)=>{\n        errorHandler.report(error);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(\"Error message:\", errorCode, errorMessage);\n        newPasswordFeedback.innerText = errorMessage;\n        signUpWithEmailButton.style.display = \"block\";\n        passwordGoBack.style.display = \"block\";\n        newPasswordLoadIcon.style.display = \"none\";\n    });\n// [END auth_signup_password]\n}\nfunction sendPasswordReset() {\n    const email = emailAddress.value;\n    // [START auth_send_password_reset]\n    firebase.auth().sendPasswordResetEmail(email).then(()=>{\n        // Password reset email sent!\n        console.log(\"Reset password email sent\");\n        forgotPasswordText.innerHTML = `Email skickat till ${email}`;\n    }).catch((error)=>{\n        errorHandler.report(error);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n    });\n// [END auth_send_password_reset]\n}\nfunction checkEmail() {\n    const email = emailAddress.value;\n    firebase.auth().fetchSignInMethodsForEmail(email).then((signInMethods)=>{\n        chooseEmailDiv.style.display = \"none\";\n        if (signInMethods.indexOf(firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD) !== -1) {\n            // Account exists\n            signinWithEmailDiv.style.display = \"block\";\n            document.getElementById(\"prefilledEmail\").innerText = `Ange lösenord för ${email}`;\n        } else {\n            // New account\n            choosePasswordDiv.style.display = \"block\";\n            document.getElementById(\"createAccountEmail\").innerText = `Välj lösenord för ${email}`;\n        }\n    }).catch((error)=>{\n        errorHandler.report(error);\n        console.log(\"Error message:\", error.code, error.message);\n    });\n}\nemailNextStepButton.addEventListener(\"click\", checkEmail);\ntipsEmailButton.addEventListener(\"click\", addEmailAndNavigate);\nresetPasswordLink.addEventListener(\"click\", sendPasswordReset);\nsignUpWithEmailButton.addEventListener(\"click\", signUpWithEmailPassword);\nsignInWithEmailButton.addEventListener(\"click\", signInWithEmailPassword);\nshowOtherSignInMethodsButton.addEventListener(\"click\", function() {\n    triggerOtherSignInMethodsView.click();\n});\ndocument.getElementById(\"passwordGoBack\").addEventListener(\"click\", ()=>{\n    chooseEmailDiv.style.display = \"block\";\n    choosePasswordDiv.style.display = \"none\";\n    document.getElementById(\"Choose-email-form\").style.display = \"block\";\n    document.querySelector(\".success-message\").style.display = \"none\";\n});\ngoogleSignInButton.addEventListener(\"click\", signInWithGoogle);\ngoogleSignInButton2.addEventListener(\"click\", signInWithGoogle);\ndocument.getElementById(\"emailAndPasswordButton\").addEventListener(\"click\", function() {\n    console.log(\"button clicked\");\n    chooseEmailDiv.style.display = \"block\";\n    loginAlternativesDiv.style.display = \"none\";\n});\n\n},{}]},[\"ioxVe\"], \"ioxVe\", \"parcelRequire81ca\")\n\n//# sourceMappingURL=signInHelpers.js.map\n","\nfunction isInAppBrowser() {\n  const browsers = {\n    facebook: /\\bFB[\\w_]+\\//,\n    twitter: /\\bTwitter/i,\n    tiktok: /\\bBytedance\\//i,\n    instagram: /\\bInstagram/i,\n  }\n  for (let [browser, regex] of Object.entries(browsers)) {\n    if (regex.test(navigator.userAgent)) {\n      return browser;\n    }\n  }\n  return false;\n}\n\nasync function signInWithGoogle() {\n  if (isInAppBrowser()) {\n    const element = document.getElementById('inAppBrowserInfo');\n    if (!element.classList.contains('tooltip-show')) {\n      setTimeout(() => {\n        element.classList.add('tooltip-show');\n        analytics.track(\"Element Viewed\", { elementID: \"googleInAppBrowserPopup\" });\n      }, 0);\n    }\n    return;\n  }\n  googleButtonText.style.display = 'none';\n  googleButtonLoadingIcon.style.display = 'block';\n  // [START auth_google_provider_create]\n  var provider = new firebase.auth.GoogleAuthProvider();\n  // [END auth_google_provider_create]\n\n\n  //NEW POPUP SIGNIN\n  try {\n    await firebase.auth().signInWithPopup(provider)\n    await authUser.whenSet(signedInNextStep);\n  } catch (error) {\n    errorHandler.report(error);\n    const errorText = `[webflow] Error signing in with Google: ${error.code}, ${error.message}, ${error.email}, ${error}`;\n    console.log(errorText);\n  }\n}\n\ndocument.addEventListener('click', event => {\n  const tooltip = document.getElementById('inAppBrowserInfo')\n  if (!tooltip.contains(event.target)) {\n    tooltip.classList.remove('tooltip-show');\n  }\n});\n\nfunction displayPreferredSignInMethod(signInMethod) {\n  if (!signInMethod.length) {\n    return;\n  }\n  const buttonId = signInMethod === 'google.com' ? 'googleSignInButton' : (signInMethod === 'phone' ? 'smsCodeButton' : 'emailAndPasswordButton');\n  const innerDiv = document.getElementById(buttonId);\n  const outerDiv = innerDiv.parentElement;\n  preferredSignInMethodDiv.appendChild(outerDiv.removeChild(innerDiv));\n  preferredSignInMethodDiv.style.display = 'block';\n  showOtherSignInMethodsButton.style.display = 'flex';\n  otherSignInMethodsDiv.style.display = 'none';\n}\nconst params = new URL(window.location).searchParams;\n//Get preferred sign in method\nif (params.has('s') && params.get('s').length >= 3) {\n  getSignInInfo(params.get('s')).then(res => {\n    if (!(res.email || res.phone || res.method)) {\n      return;\n    }\n    emailAddress.value = res.email;\n    document.getElementById('signinPhoneNumber').value = res.phone?.replace('+46', '');\n    if (res.method === 'google.com') {\n      displayIntroDivText('logInIntroText', res.email);\n      displayPreferredSignInMethod('google.com');\n    } else if (res.method === 'password') {\n      loginAlternativesDiv.style.display = 'none';\n      displayIntroDivText('logInIntroText');\n      checkEmail();\n    } else if (res.method === 'phone') {\n      displayIntroDivText('logInIntroText');\n      phoneLoginDiv.style.display = 'block';\n      mobileNumberDiv.style.display = 'block';\n      orLoginOtherWayDiv.style.display = 'block';\n      loginAlternativesDiv.style.display = 'none';\n    }\n  });\n} else {\n  displayPreferredSignInMethod(getPreferredLogInMethodCookie());\n}\n\nif (userIsSellingNewItem()) {\n  const item = JSON.parse(sessionStorage.getItem('itemToBeCreatedAfterSignIn')).item;\n  itemImage.src = item?.images?.enhancedFrontImageSmall || item?.images?.enhancedFrontImage || '';\n  notificationText.innerHTML = `För att fullfölja försäljningen av ditt ${item.brand}-plagg behöver du logga in eller skapa konto`;\n  itemToBeCreatedDiv.style.display = 'block';\n}\n\n// Disable Webflow form submit\n$('#Password-form').submit(function () {\n  return false;\n});\n$('#Choose-password-form').submit(function () {\n  return false;\n});\n\nvar form = document.getElementById(\"Phone-number-form\");\nform.addEventListener('submit', phoneSignIn);\n\nfunction phoneSignIn(event) {\n  event.preventDefault();\n\n  submitLoadIcon.style.display = 'block';\n  sendCodeButton.style.display = 'none';\n  const formPhoneNumber = signinPhoneNumber.value.startsWith('0') ? signinPhoneNumber.value.slice(1) : signinPhoneNumber.value;\n  const phoneNumber = formPhoneNumber.startsWith('+46') ? formPhoneNumber : `+46${formPhoneNumber}`;\n  console.log('signInWithPhoneNumber', phoneNumber);\n  callBackendApi('/api/users/authStart', { data: { phoneNumber }, requiresAuth: false })\n    .then(() => {\n      window.phoneNumber = phoneNumber;\n      mobileNumberDiv.style.display = 'none';\n      verifyDiv.style.display = 'block';\n    }).catch((error) => {\n      submitLoadIcon.style.display = 'none';\n      errorMessageDiv.innerText = error.message;\n      console.log('Error message: ' + error.message);\n      errorHandler.report(error);\n    });\n}\n\nsigninButton.addEventListener('click', verifyCode);\nsmsCodeButton.addEventListener('click', function () {\n  phoneLoginDiv.style.display = 'block';\n  mobileNumberDiv.style.display = 'block';\n  orLoginOtherWayDiv.style.display = 'block';\n  loginAlternativesDiv.style.display = 'none';\n});\n\nfunction verifyCode() {\n  const code = verificationCode.value;\n  console.log('Verify screen. My code: ', code);\n  console.log('phone number to verify', phoneNumber);\n  let isNewUser = false;\n  callBackendApi('/api/users/phoneNumberExists', { data: { phoneNumber }, requiresAuth: false })\n    .then((result) => {\n      console.log('phoneNumberExists result', phoneNumber, JSON.stringify(result));\n      const type = result.data.exists ? 'signIn' : 'signUp';\n      isNewUser = type === 'signUp';\n      return callBackendApi('/api/users/authVerify', { data: { phoneNumber, code, type }, requiresAuth: false });\n    })\n    .then((result) => {\n      const customToken = result.data.customToken;\n      return firebase.auth().signInWithCustomToken(customToken);\n    })\n    .then((user) => {\n      if (typeof (Storage) !== \"undefined\") {\n        sessionStorage.setItem(\"userId\", user.uid);\n        sessionStorage.setItem(\"phone\", user.phoneNumber);\n      } else {\n        console.log(\"Sorry, your browser does not support Web Storage...\");\n      }\n\n      console.log(\"isNewUser\", isNewUser);\n      if (isNewUser) {\n        emailForTipsDiv.style.display = 'block';\n        verifyDiv.style.display = 'none';\n        phoneLoginDiv.style.display = 'none';\n      } else {\n        authUser.whenSet(signedInNextStep);\n      }\n    }).catch((error) => {\n      console.log('My error: ' + error.message);\n      errorHandler.report(error);\n    });\n}\n\n\nfunction addEmailAndNavigate() {\n  try {\n    tipsEmailButton.style.display = 'none'\n    loadingSpinnerDiv.style.display = 'flex'\n    if (typeof (Storage) !== \"undefined\") {\n      sessionStorage.setItem(\"email\", emailTipsInput.value);\n    } else {\n      console.log(\"Sorry, your browser does not support Web Storage...\");\n    }\n    authUser.whenSet(signedInNextStep);\n  } catch (e) {\n    console.log('failed to add email', e)\n    loadingSpinnerDiv.style.display = 'none'\n    tipsEmailButton.style.display = 'block'\n    errorHandler.report(e);\n  }\n}\n\n\n\n// EMAIL AND PASSWORD SIGN UP\n\nfunction signInWithEmailPassword() {\n  const email = emailAddress.value;\n  const password = emailPassword.value;\n  signInWithEmailButton.style.display = 'none';\n  passwordLoadIcon.style.display = 'block';\n  // [START auth_signin_password]\n  firebase.auth().signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      window.userId = user.uid;\n      console.log(\"Logged in user: \", user.uid);\n      authUser.whenSet(() => {\n        if (!authUser.current.emailVerified && getCookie('viewedVerifyEmailDiv') !== 'true') {\n          signedInNextStep('./user-management?mode=sendEmailVerification');\n        } else {\n          signedInNextStep();\n        }\n      });\n    })\n    .catch((error) => {\n      errorHandler.report(error);\n      console.log(\"Error message:\", error.code, error.message);\n      if (error.code === \"auth/wrong-password\") {\n        passwordFeedback.innerText = \"Fel lösenord\";\n        passwordFeedback.style.display = 'block';\n        signInWithEmailButton.style.display = 'block';\n        passwordLoadIcon.style.display = 'none';\n      }\n    });\n  // [END auth_signin_password]\n}\n\nfunction signUpWithEmailPassword() {\n  const email = emailAddress.value;\n  const password = newPassword.value;\n  signUpWithEmailButton.style.display = 'none';\n  passwordGoBack.style.display = 'none';\n  newPasswordLoadIcon.style.display = 'block';\n  // [START auth_signup_password]\n  firebase.auth().createUserWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      window.userId = user.uid;\n      console.log(\"Logged in user: \", user);\n      firebase.auth().currentUser.sendEmailVerification().then(() => {\n        authUser.whenSet(() => signedInNextStep('./user-management?mode=sendEmailVerification'));\n      });\n    })\n    .catch((error) => {\n      errorHandler.report(error);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(\"Error message:\", errorCode, errorMessage);\n      newPasswordFeedback.innerText = errorMessage;\n      signUpWithEmailButton.style.display = 'block';\n      passwordGoBack.style.display = 'block';\n      newPasswordLoadIcon.style.display = 'none';\n    });\n  // [END auth_signup_password]\n}\n\nfunction sendPasswordReset() {\n  const email = emailAddress.value;\n  // [START auth_send_password_reset]\n  firebase.auth().sendPasswordResetEmail(email)\n    .then(() => {\n      // Password reset email sent!\n      console.log(\"Reset password email sent\");\n      forgotPasswordText.innerHTML = `Email skickat till ${email}`;\n    })\n    .catch((error) => {\n      errorHandler.report(error);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode, errorMessage);\n    });\n  // [END auth_send_password_reset]\n}\n\nfunction checkEmail() {\n  const email = emailAddress.value;\n  firebase.auth().fetchSignInMethodsForEmail(email)\n    .then((signInMethods) => {\n      chooseEmailDiv.style.display = 'none';\n      if (signInMethods.indexOf(\n        firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD) !== -1) {\n        // Account exists\n        signinWithEmailDiv.style.display = 'block';\n        document.getElementById('prefilledEmail').innerText = `Ange lösenord för ${email}`;\n      } else {\n        // New account\n        choosePasswordDiv.style.display = 'block';\n        document.getElementById('createAccountEmail').innerText = `Välj lösenord för ${email}`;\n      }\n    })\n    .catch((error) => {\n      errorHandler.report(error);\n      console.log(\"Error message:\", error.code, error.message);\n    });\n}\n\nemailNextStepButton.addEventListener('click', checkEmail);\ntipsEmailButton.addEventListener('click', addEmailAndNavigate)\nresetPasswordLink.addEventListener('click', sendPasswordReset);\n\nsignUpWithEmailButton.addEventListener('click', signUpWithEmailPassword);\nsignInWithEmailButton.addEventListener('click', signInWithEmailPassword);\nshowOtherSignInMethodsButton.addEventListener('click', function () {\n  triggerOtherSignInMethodsView.click();\n});\n\ndocument.getElementById('passwordGoBack').addEventListener('click', () => {\n  chooseEmailDiv.style.display = 'block';\n  choosePasswordDiv.style.display = 'none';\n  document.getElementById('Choose-email-form').style.display = 'block';\n  document.querySelector('.success-message').style.display = 'none';\n})\ngoogleSignInButton.addEventListener('click', signInWithGoogle);\ngoogleSignInButton2.addEventListener('click', signInWithGoogle);\ndocument.getElementById('emailAndPasswordButton').addEventListener('click', function () {\n  console.log('button clicked');\n  chooseEmailDiv.style.display = 'block';\n  loginAlternativesDiv.style.display = 'none';\n});\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","signInWithGoogle","isInAppBrowser","browser","regex","entries","facebook","twitter","tiktok","instagram","test","navigator","userAgent","element","document","getElementById","classList","contains","setTimeout","add","analytics","track","elementID","googleButtonText","style","display","googleButtonLoadingIcon","provider","firebase","auth","GoogleAuthProvider","signInWithPopup","authUser","whenSet","signedInNextStep","error","errorHandler","report","errorText","message","email","console","log","displayPreferredSignInMethod","signInMethod","innerDiv","outerDiv","parentElement","preferredSignInMethodDiv","appendChild","removeChild","showOtherSignInMethodsButton","otherSignInMethodsDiv","addEventListener","event","tooltip","target","remove","params","URL","location","searchParams","has","getSignInInfo","then","phone","method","emailAddress","value","replace","displayIntroDivText","loginAlternativesDiv","checkEmail","phoneLoginDiv","mobileNumberDiv","orLoginOtherWayDiv","getPreferredLogInMethodCookie","userIsSellingNewItem","item","JSON","parse","sessionStorage","getItem","itemImage","src","images","enhancedFrontImageSmall","enhancedFrontImage","notificationText","innerHTML","brand","itemToBeCreatedDiv","fetchSignInMethodsForEmail","signInMethods","chooseEmailDiv","indexOf","EmailAuthProvider","EMAIL_PASSWORD_SIGN_IN_METHOD","signinWithEmailDiv","innerText","choosePasswordDiv","catch","$","submit","form","preventDefault","submitLoadIcon","sendCodeButton","formPhoneNumber","signinPhoneNumber","startsWith","slice","phoneNumber1","callBackendApi","data","phoneNumber","requiresAuth","verifyDiv","errorMessageDiv","signinButton","verificationCode","isNewUser","result","stringify","type","exists","customToken","signInWithCustomToken","user","Storage","setItem","uid","emailForTipsDiv","smsCodeButton","emailNextStepButton","tipsEmailButton","loadingSpinnerDiv","emailTipsInput","e","resetPasswordLink","sendPasswordResetEmail","forgotPasswordText","signUpWithEmailButton","password","newPassword","passwordGoBack","newPasswordLoadIcon","createUserWithEmailAndPassword","userCredential","userId","currentUser","sendEmailVerification","errorCode","errorMessage","newPasswordFeedback","signInWithEmailButton","emailPassword","passwordLoadIcon","signInWithEmailAndPassword","current","emailVerified","getCookie","passwordFeedback","triggerOtherSignInMethodsView","click","querySelector","googleSignInButton","googleSignInButton2"],"version":3,"file":"signInHelpers.js.map"}