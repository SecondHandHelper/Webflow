!function(){function e(e){let t=e+"=",o=document.cookie.split(";");for(let e=0;e<o.length;e++){let n=o[e];for(;" "==n.charAt(0);)n=n.substring(1);if(0==n.indexOf(t))return decodeURIComponent(n=n.substring(t.length,n.length))}return""}let t="preferredLoginMethod";async function o(e,t){console.log("showActivatedBonus run");let o="BONUS";e&&"Mai"!==e?o="BONUS - INBJUDEN AV "+e.toUpperCase():t&&(o="BONUS - "+t.toUpperCase()),document.getElementById("bonusSection")&&(document.getElementById("bonusName").innerHTML=o,document.getElementById("bonusActivatedState").style.display="block",document.getElementById("enterCodeState").style.display="none",bonusSection.style.display="block")}async function n(e){// Show message they can't add their own code
errorBannerMessage.innerHTML=e||errorBannerMessage.innerHTML,errorMessageBanner.style.display="flex",saveRefCodeLoadingDiv.style.display="none",saveReferralCodeButton.style.display="inline-block",//saveReferralCodeButton.click(); //To trigger animation
setTimeout(function(){errorMessageBanner.style.display="none"},2500)}async function i(e){if((e=e.trim().toUpperCase())===user.current?.referralData?.referralCode){await n("Du kan inte aktivera din egen kod");return}// Find user with matching referral code and connect users
try{let t=await firebase.app().functions("europe-west3").httpsCallable("connectReferralUser")({code:e});if(document.cookie="invite=; Max-Age=-99999999;",console.log("connecReferralUser response: ",t),t?.data?.code===400)return;t?.data?.name?(await o(t?.data?.name,e),console.log("Referral connection successfully stored")):(console.log("Failed to use referral code",t?.data),await n(`Koden ${e} finns inte`))}catch(e){errorHandler.report(e),console.log("Failed to use referral code",e)}}async function r(){let e=authUser.current.refreshToken,t=await authUser.current.getIdToken();try{// TODO: Change to maiapp.se to go live
return await fetch("https://api.shh-test.page/maiappAuth",{credentials:"include",headers:{Authorization:"Bearer "+t,"X-Mai-Refresh-Token":e}})}catch(e){errorHandler.report(e),console.log("Error setting cookie with refresh token",e)}}function s(){return sessionStorage.getItem("itemToBeCreatedAfterSignIn")&&(document.referrer.includes("/sell-item")||document.referrer.includes("/item-valuation"))}async function a(e,t,o,n){let r={};t&&(r.email=t),o&&(r.phoneNumber=o),n&&(r.personalId=n);let s=authUser.current.providerData[0].providerId;s&&(r.signInMethod=s);let a=db.collection("users").doc(e);try{let t=await a.get();if(t.exists)await a.update(r),console.log(`User document ${e} was successfully updated with these fields: `,r);else{// Get and set attribution utm parameters only when creating user doc
let t=checkCookie("utm_campaign"),o=checkCookie("utm_source"),n=checkCookie("utm_medium"),s=checkCookie("utm_term"),l=checkCookie("utm_content"),d={};t&&(d.utm_campaign=t),o&&(d.utm_source=o),n&&(d.utm_medium=n),s&&(d.utm_term=s),l&&(d.utm_content=l),Object.keys(d).length>0&&(r.attribution=d),// Create User Document
await a.set(r),console.log(`User document was created with id ${e} and these fields: `,r),identify(authUser.current,r),user.current=r;// Connect referral user from invite cookie only when creating user doc
let c=checkCookie("invite");c&&await i(c)}}catch(e){errorHandler.report(e),console.log("Something went wrong:",e)}}async function l(e){// User is signed in
if(authUser.current){let e=authUser.current.email||sessionStorage.getItem("email"),t=authUser.current.phoneNumber||sessionStorage.getItem("phoneNumber"),o=authUser.current.personalId||sessionStorage.getItem("personalId");await a(authUser.current.uid,e,t,o);//Important that this happens first, since many other functions depend on an existing user document
}// If itemCreatedFromAnotherItem in sessionStorage => Back to sell-item
s()?location.href="./sell-item":e&&"string"==typeof e?location.href=e:location.href="./private"}function d(e){var t=document.getElementById(e).parentElement,o=document.getElementById(e);preferredSignInMethodDiv.appendChild(t.removeChild(o)),preferredSignInMethodDiv.style.display="block",showOtherSignInMethodsButton.style.display="flex",otherSignInMethodsDiv.style.display="none"}window.recaptchaVerifier=new firebase.auth.RecaptchaVerifier("sendCodeButton",{size:"invisible",callback:e=>{// reCAPTCHA solved, allow signInWithPhoneNumber.
onSignInSubmit()}}),console.log("Check onAuthStateChanged: ",new Date),firebase.auth().onAuthStateChanged(async e=>{console.log("onAuthStateChanged callback: ",new Date);let o=new Date().toISOString();if(e){authUser.current=e,console.log("authUser:",authUser.current),localStorage.setItem("authUserId",e.uid);try{var n;n=e.providerData[0].providerId,function(e,t,o){let n=new Date;n.setTime(n.getTime()+5184e8);let i="expires="+n.toUTCString();t=encodeURIComponent(t=t.replaceAll("+"," ")),document.cookie=e+"="+t+";"+i+";path=/";//console.log("Cookie set: ", cname + "=" + cvalue);
}(t,n,0);let o=await db.collection("users").doc(e.uid).get();o.exists&&(identify(e,o.data()),console.log("user:",o.data()),user.current=o.data()),await r()}catch(e){errorHandler.report(e),console.log("Error getting document:",e)}}else{console.log("No user"),localStorage.removeItem("authUserId");// Go to landing page if no user and on logged in pages
let e=window.location.pathname;// Latest page view for logged out users
analytics.identify({latestPageView:o}),("/private"===e||"/personal-id-form"===e||"/address-form"===e||"/item"===e||"/ship-item"===e||"/edit-item"===e||"/order-bags"===e)&&(location.href="./"),"/"===e&&(headerLoginLoading.style.display="none",headerLoginButton.style.display="flex")}}),async function(){let t=e("maiAuth");if(t?.length&&!authUser.current)try{// Get an id token that can be validated by the firebase function maiappAuth
let e=await fetch(`https://securetoken.googleapis.com/v1/token?key=${firebaseConfig.apiKey}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({grant_type:"refresh_token",refresh_token:t})}),o=await e.json();if(o.id_token&&!authUser.current){// Get a custom token that we can use to sign in
let e=await fetch(`https://api.shh-test.page/maiappAuth?id_token=${o.id_token}`),t=await e.json();"customToken"!==t.status||authUser.current||await firebase.auth().signInWithCustomToken(t.customToken)}}catch(e){errorHandler.report(e),console.log("Failed to log in using saved token",e)}}();//Get preferred sign in method
let c=e(t);if(c&&(console.log("preferredSignInMethod exist",c),"google.com"===c&&d("googleSignInButton"),"phone"===c&&d("smsCodeButton"),"password"===c&&d("emailAndPasswordButton")),s()){let e=JSON.parse(sessionStorage.getItem("itemToBeCreatedAfterSignIn")).item;itemImage.src=e?.images?.enhancedFrontImageSmall||e?.images?.enhancedFrontImage||"",notificationText.innerHTML=`F\xf6r att fullf\xf6lja f\xf6rs\xe4ljningen av ditt ${e.brand}-plagg beh\xf6ver du logga in eller skapa konto`,itemToBeCreatedDiv.style.display="block"}async function u(){googleButtonText.style.display="none",googleButtonLoadingIcon.style.display="block";// [START auth_google_provider_create]
var e=new firebase.auth.GoogleAuthProvider;// [END auth_google_provider_create]
//NEW POPUP SIGNIN
try{await firebase.auth().signInWithPopup(e),await authUser.whenSet(l)}catch(t){errorHandler.report(t);let e=`[webflow] Error signing in with Google: ${t.code}, ${t.message}, ${t.email}, ${t}`;console.log(e)}}// Disable Webflow form submit
$("#Password-form").submit(function(){return!1}),$("#Choose-password-form").submit(function(){return!1}),document.getElementById("Phone-number-form").addEventListener("submit",function(e){e.preventDefault(),submitLoadIcon.style.display="block",sendCodeButton.style.display="none";let t=signinPhoneNumber.value,o=`+46${t}`;console.log(t,o);let n=window.recaptchaVerifier;firebase.auth().signInWithPhoneNumber(o,n).then(e=>{window.confirmationResult=e,console.log("V Code"+window.confirmationResult.verificationId),mobileNumberDiv.style.display="none",verifyDiv.style.display="block"}).catch(e=>{// Error; SMS not sent
// ...
//errorMessageDiv.style.display = 'block';
submitLoadIcon.style.display="none",errorMessageDiv.innerText=e.message,console.log("Error message: "+e.message),errorHandler.report(e)})}),signinButton.addEventListener("click",function(){let e=verificationCode.value;console.log("Verify screen. My code: "+e),console.log("VerificationID"+confirmationResult.verificationId),confirmationResult.confirm(e).then(e=>{let t=e.user;"undefined"!=typeof Storage?(sessionStorage.setItem("userId",t.uid),sessionStorage.setItem("phone",t.phoneNumber)):console.log("Sorry, your browser does not support Web Storage..."),e.additionalUserInfo.isNewUser?(emailForTipsDiv.style.display="block",verifyDiv.style.display="none"):authUser.whenSet(l)}).catch(e=>{console.log("My error: "+e.message),errorHandler.report(e)})}),smsCodeButton.addEventListener("click",function(){mobileNumberDiv.style.display="block",orLoginOtherWayDiv.style.display="block",loginAlternativesDiv.style.display="none"}),googleSignInButton.addEventListener("click",u),googleSignInButton2.addEventListener("click",u),signinFormsDiv.style.display="block",signinLoadingDiv.style.display="none",emailNextStepButton.addEventListener("click",function(){let e=emailAddress.value;console.log("emailAddress: ",e),firebase.auth().fetchSignInMethodsForEmail(e).then(e=>{-1!=e.indexOf(firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD)?(// User can sign in with email/password.
console.log("Account exists -> Login with email"),chooseEmailDiv.style.display="none",signinWithEmailDiv.style.display="block"):(console.log("Account doesn't exist -> Create new account"),chooseEmailDiv.style.display="none",choosePasswordDiv.style.display="block")}).catch(e=>{errorHandler.report(e),console.log("Error message:",e.code,e.message)})}),tipsEmailButton.addEventListener("click",function(){try{tipsEmailButton.style.display="none",loadingSpinnerDiv.style.display="flex","undefined"!=typeof Storage?sessionStorage.setItem("email",emailTipsInput.value):console.log("Sorry, your browser does not support Web Storage..."),authUser.whenSet(l)}catch(e){console.log("failed to add email",e),loadingSpinnerDiv.style.display="none",tipsEmailButton.style.display="block",errorHandler.report(e)}}),resetPasswordLink.addEventListener("click",function(){let e=emailAddress.value;// [START auth_send_password_reset]
firebase.auth().sendPasswordResetEmail(e).then(()=>{// Password reset email sent!
console.log("Reset password email sent"),forgotPasswordText.innerHTML=`Email skickat till ${e}`}).catch(e=>{errorHandler.report(e),console.log(e.code,e.message)});// [END auth_send_password_reset]
}),emailAndPasswordButton.addEventListener("click",function(){chooseEmailDiv.style.display="block",loginAlternativesDiv.style.display="none"}),signUpWithEmailButton.addEventListener("click",function(){let e=emailAddress.value,t=newPassword.value;signUpWithEmailButton.style.display="none",newPasswordLoadIcon.style.display="block",// [START auth_signup_password]
firebase.auth().createUserWithEmailAndPassword(e,t).then(e=>{// Signed in
let t=e.user;window.userId=t.uid,console.log("Logged in user: ",t),firebase.auth().currentUser.sendEmailVerification().then(()=>{authUser.whenSet(()=>l("./user-management?mode=sendEmailVerification"))})}).catch(e=>{errorHandler.report(e);var t=e.code,o=e.message;console.log("Error message:",t,o),newPasswordFeedback.innerText=o,signUpWithEmailButton.style.display="block",newPasswordLoadIcon.style.display="none"});// [END auth_signup_password]
}),signInWithEmailButton.addEventListener("click",function(){let t=emailAddress.value,o=emailPassword.value;signInWithEmailButton.style.display="none",passwordLoadIcon.style.display="block",// [START auth_signin_password]
firebase.auth().signInWithEmailAndPassword(t,o).then(t=>{// Signed in
let o=t.user;window.userId=o.uid,console.log("Logged in user: ",o.uid),authUser.whenSet(()=>{authUser.current.emailVerified||"true"===e("viewedVerifyEmailDiv")?l():l("./user-management?mode=sendEmailVerification")})}).catch(e=>{errorHandler.report(e),console.log("Error message:",e.code,e.message),"auth/wrong-password"===e.code&&(passwordFeedback.innerText="Fel l\xf6senord",passwordFeedback.style.display="block",signInWithEmailButton.style.display="block",passwordLoadIcon.style.display="none")});// [END auth_signin_password]
}),showOtherSignInMethodsButton.addEventListener("click",function(){triggerOtherSignInMethodsView.click()})}();//# sourceMappingURL=signIn.js.map

//# sourceMappingURL=signIn.js.map
